{
	"info": {
		"_postman_id": "jwt-user-service-collection",
		"name": "JWT User Service",
		"description": "Complete API collection for JWT User Service with authentication and CRUD operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Sign Up",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign In",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"john.doe\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract tokens from Sign In response and save to global variables",
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.accessToken) {",
									"        pm.globals.set('accessToken', response.accessToken);",
									"        console.log('Access token saved to global variables');",
									"    }",
									"    if (response.refreshToken) {",
									"        pm.globals.set('refreshToken', response.refreshToken);",
									"        console.log('Refresh token saved to global variables');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refreshToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract tokens from Refresh Token response and save to global variables",
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.accessToken) {",
									"        pm.globals.set('accessToken', response.accessToken);",
									"        console.log('New access token saved to global variables');",
									"    }",
									"    if (response.refreshToken) {",
									"        pm.globals.set('refreshToken', response.refreshToken);",
									"        console.log('New refresh token saved to global variables');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Sign Out",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Clear tokens from global variables after Sign Out",
									"if (pm.response.code === 200 || pm.response.code === 204) {",
									"    pm.globals.unset('accessToken');",
									"    pm.globals.unset('refreshToken');",
									"    console.log('Tokens cleared from global variables after sign out');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/search?q=john",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "john"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Alice\",\n    \"lastName\": \"Johnson\",\n    \"age\": 28,\n    \"birthday\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John Updated\",\n    \"lastName\": \"Doe Updated\",\n    \"age\": 31,\n    \"birthday\": \"1993-05-15\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Multiple Users",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[1, 2, 3]"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"batch"
							]
						}
					},
					"response": []
				}
			]
		}
	],

	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
} 